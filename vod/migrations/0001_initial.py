# Generated by Django 3.2.8 on 2021-10-06 16:12

import core.utils.units
from django.db import migrations, models
import django.db.models.deletion
import vod.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0002_alter_userprofile_user_type'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=50)),
                ('uid', models.CharField(default=core.utils.units.getUniqueId, max_length=10, unique=True)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['-updated'],
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=50)),
                ('uid', models.CharField(default=core.utils.units.getUniqueId, max_length=10, unique=True)),
            ],
            options={
                'verbose_name': 'Genre',
                'verbose_name_plural': 'Genres',
                'ordering': ['-updated'],
            },
        ),
        migrations.CreateModel(
            name='Poster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('image', models.ImageField(upload_to='')),
                ('uid', models.UUIDField(default=core.utils.units.LongUniqueId)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.store')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.marchant')),
            ],
            options={
                'verbose_name': 'Poster',
                'verbose_name_plural': 'Posters',
                'ordering': ['-updated'],
            },
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=250)),
                ('uid', models.UUIDField(default=core.utils.units.LongUniqueId)),
                ('thumb', models.ImageField(upload_to='')),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('review', 'Review'), ('published', 'Publish')], max_length=25)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.store')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='series', to='vod.category')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.marchant')),
                ('genre', models.ManyToManyField(to='vod.Genre')),
                ('posters', models.ManyToManyField(to='vod.Poster')),
            ],
            options={
                'verbose_name': 'Series',
                'verbose_name_plural': 'Series',
                'ordering': ['-timestamp', 'title'],
            },
        ),
        migrations.CreateModel(
            name='SeriesSeason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=250)),
                ('uid', models.UUIDField(default=core.utils.units.LongUniqueId)),
                ('thumb', models.ImageField(upload_to='')),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('review', 'Review'), ('published', 'Publish')], max_length=25)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.store')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.marchant')),
                ('posters', models.ManyToManyField(blank=True, null=True, to='vod.Poster')),
                ('series', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seasons', to='vod.series')),
            ],
            options={
                'verbose_name': 'Series Season',
                'verbose_name_plural': 'Series Seasons',
                'ordering': ['-timestamp', 'title'],
            },
        ),
        migrations.CreateModel(
            name='SeasonEpisode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=250)),
                ('uid', models.UUIDField(default=core.utils.units.LongUniqueId)),
                ('thumb', models.ImageField(upload_to=vod.models.episode_thumb_location)),
                ('description', models.TextField(blank=True, null=True)),
                ('video', models.FileField(upload_to=vod.models.episode_location)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('review', 'Review'), ('published', 'Publish')], max_length=25)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.store')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.marchant')),
                ('posters', models.ManyToManyField(blank=True, null=True, to='vod.Poster')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='episodes', to='vod.seriesseason')),
            ],
            options={
                'verbose_name': 'Season Episode',
                'verbose_name_plural': 'Season Episodes',
                'ordering': ['-timestamp', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=250)),
                ('uid', models.UUIDField(default=core.utils.units.LongUniqueId)),
                ('thumb', models.ImageField(upload_to=vod.models.movie_thumb_locations)),
                ('description', models.TextField()),
                ('video', models.FileField(upload_to=vod.models.movie_locations)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('review', 'Review'), ('published', 'Publish')], max_length=25)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.store')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='movies', to='vod.category')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.marchant')),
                ('genre', models.ManyToManyField(to='vod.Genre')),
                ('posters', models.ManyToManyField(to='vod.Poster')),
            ],
            options={
                'verbose_name': 'Movie',
                'verbose_name_plural': 'Movies',
                'ordering': ['-timestamp', 'title'],
            },
        ),
    ]
