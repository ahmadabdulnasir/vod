"""
Django settings for video_on_demand project.

Generated by 'django-admin startproject' using Django 3.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
from django.contrib.messages import constants as messages
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
PROJECT_ROOT = os.path.dirname(BASE_DIR)

ALLOWED_HOSTS = ["127.0.0.1", "localhost"]

# Application definition
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.forms",
    "django.contrib.humanize",
    # local apps
    "core",
    "accounts",
    "errorHandler",
    "core.location",
    "vod",
    # "audit",
    # third party
    "corsheaders",
    "django_extensions",
    "rest_framework",
    "rest_framework.authtoken",
    "crispy_forms",
    "django_countries",
    "import_export",
    "ckeditor",
    "ckeditor_uploader",
    "storages",
    "taggit",
]
FORM_RENDERER = "django.forms.renderers.TemplatesSetting"
MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    # "audit.middleware.LoggedInUserMiddleware",
    # "audit.middleware.AuditlogMiddleware",
    # "errorHandler.middleware.ErrorHandlerMiddleware",
]

ROOT_URLCONF = 'video_on_demand.urls'

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(PROJECT_ROOT, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "core.core_context.UniversalContext",
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ]
        },
    }
]

WSGI_APPLICATION = 'video_on_demand.wsgi.application'

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/
LANGUAGE_CODE = "en-us"
TIME_ZONE = "Africa/Lagos"
USE_I18N = True
USE_L10N = True
USE_TZ = True
# USE_THOUSAND_SEPARATOR = True

# Custom Config
CORS_ALLOW_HEADERS = (
    "accept",
    "accept-encoding",
    "authorization",
    "content-type",
    "dnt",
    "origin",
    "user-agent",
    "x-csrftoken",
    "x-requested-with",
    "*",
    "Access-Control-Allow-Origin",
)
CORS_ORIGIN_ALLOW_ALL = True

CORS_ALLOW_METHODS = ("GET", "OPTIONS", "PATCH", "POST", "PUT", "DELETE")

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework.authentication.BasicAuthentication",
        "rest_framework.authentication.SessionAuthentication",
        "rest_framework.authentication.TokenAuthentication",
    ),
    "EXCEPTION_HANDLER": "errorHandler.utils.custom_exception_handler.drf_exception_handler",
}

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

DATA_UPLOAD_MAX_NUMBER_FIELDS = 102400
#  Mail sending
SERVER_EMAIL = "hello@bigtrustacademy.com"
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.zoho.com"
EMAIL_USE_SSL = True
EMAIL_PORT = 465
EMAIL_HOST_USER = "hello@bigtrustacademy.com"
EMAIL_HOST_PASSWORD = os.environ.get("EMAIL_PASS", "Talatarana02@")
DEFAULT_FROM_EMAIL = "video_on_demand <hello@bigtrustacademy.com>"
SITE_ID = 1
LOGIN_REDIRECT_URL = "/accounts/dashboard/"
LOGOUT_REDIRECT_URL = "/"
APPEND_SLASH = True
IMPORT_EXPORT_USE_TRANSACTIONS = True
# CRISPY FORMS
CRISPY_TEMPLATE_PACK = "bootstrap4"
# CRISPY_TEMPLATE_PACK = 'uni_form'
CKEDITOR_UPLOAD_PATH = "uploads/ck/"
X_FRAME_OPTIONS = "SAMEORIGIN"
COUNTRIES_FIRST_REPEAT = ["Nigeria"]

# MESSAGE_TAGS = {
#     messages.DEBUG: 'secondary',
#     messages.INFO: 'info',
#     messages.SUCCESS: 'success',
#     messages.WARNING: 'warning',
#     messages.ERROR: 'error',
# }

LOG_PATH = os.path.join(PROJECT_ROOT, "logs/")
if not os.path.isdir(LOG_PATH):
    print(f"Creating Log Directory: {LOG_PATH}")
    os.mkdir(LOG_PATH)

LOGGING = {
    "version": 1,
    "disable_existing_loggers": True,
    "formatters": {
        "standard": {"format": "%(asctime)s [%(levelname)s]- %(message)s"}
        # format='%(asctime)-15s %(name)-5s %(levelname)-8s IP: %(ip)-15s User: %(user)-8s %(message)s')
    },
    "handlers": {
        "django_error": {
            "level": "DEBUG",
            "class": "logging.handlers.RotatingFileHandler",
            "filename": LOG_PATH + "error.log",
            "formatter": "standard",
        },
        "info": {
            "level": "DEBUG",
            "class": "logging.handlers.RotatingFileHandler",
            "filename": LOG_PATH + "info.log",
            "formatter": "standard",
        },
        "console": {
            "level": "DEBUG",
            "class": "logging.StreamHandler",
            "formatter": "standard",
        },
        "mail_admins": {
            "level": "ERROR",
            "class": "django.utils.log.AdminEmailHandler",
            "email_backend": "django.core.mail.backends.filebased.EmailBackend",
        },
    },
    "loggers": {
        "info": {"handlers": ["info", "console"], "level": "DEBUG", "propagate": True},
        "django": {"handlers": ["info", "console"], "level": "INFO", "propagate": True},
        "django.request": {
            "handlers": ["django_error", "console", "info"],
            "level": "DEBUG",
            "propagate": True,
        },
        "django.db.backends": {
            "handlers": ["django_error", "console", "mail_admins"],
            "level": "ERROR",
            "propagate": True,
        },
    },
}
